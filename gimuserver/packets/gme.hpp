
/*
    This file was autogenerated by decompfrontier packet-generator.
    Generation date: 2025-04-10 17:17:19

    DO NOT MODIFY THIS FILE! MODIFY THE FILE ./data/net/gme.py INSIDE THE
    PACKET GENERATOR REPOSITORY AND RUN THE GENERATION AGAIN!
*/
#pragma once

#include <glaze_helpers.hpp> // c++ runtime helpers

struct GmeAction {
	std::optional<GmeBody>	body{};
	std::optional<GmeError>	error{};
	GmeHeader	header{};
};
template <>
struct glz::meta<GmeAction>
{
    using T = GmeAction;
    static constexpr auto value = object(
		"a3vSYuq2", &T::body,
		"b5PH6mZa", &T::error,
		"F4q6i9xe", &T::header
    );
};




struct GmeBody {
	std::string	body{};
};
template <>
struct glz::meta<GmeBody>
{
    using T = GmeBody;
    static constexpr auto value = object(
		"Kn51uR4Y", &T::body
    );
};




struct GmeError {
	GmeErrorCommand	cmd{};
	GmeErrorFlags	flag{};
	std::string	message{};
	std::string	url{};
};
template <>
struct glz::meta<GmeError>
{
    using T = GmeError;
    static constexpr auto value = object(
		"iPD12YCr", &T::cmd,
		"3e9aGpus", &T::flag,
		"ZC0msu2L", &T::message,
		"zcJeTx18", &T::url
    );
};




enum class GmeErrorCommand {
	Retry = 2,
	Continue = 3,
	Close = 4,
	Close2 = 5,
	ReturnToGame = 6,
	RaidError = 7,
	Continue2 = 8,
	LogoutFacebook = 9,
	Close3 = 10,
};





enum class GmeErrorFlags {
	IsInError = 1,
	ShouldHandleCommands = 2,
};





struct GmeHeader {
	std::string	client_id{};
	std::string	id{};
};
template <>
struct glz::meta<GmeHeader>
{
    using T = GmeHeader;
    static constexpr auto value = object(
		"aV6cLn3v", &T::client_id,
		"Hhgi79M1", &T::id
    );
};




