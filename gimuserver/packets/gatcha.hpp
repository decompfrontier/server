
/*
    This file was autogenerated by decompfrontier packet-generator.
    Generation date: 2025-04-10 17:17:19

    DO NOT MODIFY THIS FILE! MODIFY THE FILE ./data/mst/gatcha.py INSIDE THE
    PACKET GENERATOR REPOSITORY AND RUN THE GENERATION AGAIN!
*/
#pragma once

#include <glaze_helpers.hpp> // c++ runtime helpers

struct GachaCategoryData {
	uint32_t	disp_order{};
	std::chrono::system_clock::time_point	end_date{};
	std::string	gatcha_id_list{};
	uint32_t	id{};
	std::string	img{};
	std::chrono::system_clock::time_point	start_date{};
};
template <>
struct glz::meta<GachaCategoryData>
{
    using T = GachaCategoryData;
    static constexpr auto value = object(
		"2r4EoNt4", &T::disp_order,
		"SzV0Nps7", glzhlp::datetimeunix<&T::end_date>,
		"3rCmq58M", &T::gatcha_id_list,
		"vx9uyQVQ", &T::id,
		"In7lGGLn", &T::img,
		"qA7M9EjP", glzhlp::datetimeunix<&T::start_date>
    );
};

struct GachaCategory {
    using TYPE = GachaCategoryData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<GachaCategory>
{
    using T = GachaCategory;
    static constexpr auto value = object("IBs49NiH", &T::data);
};

struct GachaEffectMstData {
	std::string	effect{};
	std::string	effect_after{};
	std::string	effect_before{};
	uint32_t	gatcha_id{};
	uint32_t	id{};
	uint32_t	rare{};
	float	rate{};
};
template <>
struct glz::meta<GachaEffectMstData>
{
    using T = GachaEffectMstData;
    static constexpr auto value = object(
		"YTx3c1jQ", &T::effect,
		"tj0i9JhC", &T::effect_after,
		"7ZNcmYS2", &T::effect_before,
		"7Ffmi96v", &T::gatcha_id,
		"u0vkt9yH", &T::id,
		"7ofj5xa1", &T::rare,
		"ug9xV4Fz", glz::write_float32<&T::rate>
    );
};

struct GachaEffectMst {
    using TYPE = GachaEffectMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<GachaEffectMst>
{
    using T = GachaEffectMst;
    static constexpr auto value = object("Pf97SzVw", &T::data);
};

struct GachaMstData {
	std::string	bg_img{};
	std::string	btn_img{};
	std::string	caption_msg{};
	std::string	comment_msg{};
	std::optional<std::string>	contents_banner_img{};
	std::string	description{};
	std::string	detail_msg{};
	std::string	door_img{};
	std::chrono::system_clock::time_point	end_date{};
	std::string	end_hour{};
	std::optional<std::string>	gatcha_detail_id{};
	uint32_t	gatcha_group_id{};
	uint32_t	id{};
	std::string	name{};
	uint32_t	need_friend_point{};
	uint32_t	need_gems{};
	bool	once_day_flag{};
	uint32_t	priority{};
	std::chrono::system_clock::time_point	start_date{};
	std::string	start_hour{};
	uint32_t	type{};
};
template <>
struct glz::meta<GachaMstData>
{
    using T = GachaMstData;
    static constexpr auto value = object(
		"1Dg0vUX3", &T::bg_img,
		"W9ABuJj2", &T::btn_img,
		"3sdHQb69", &T::caption_msg,
		"gVSj32QH", &T::comment_msg,
		"sA9dDAqB", &T::contents_banner_img,
		"qp37xTDh", &T::description,
		"W2c9g0Je", &T::detail_msg,
		"uKYf13AH", &T::door_img,
		"SzV0Nps7", glzhlp::datetime<&T::end_date>,
		"v9TR3cDz", &T::end_hour,
		"8Z9CYQDq", &T::gatcha_detail_id,
		"TCnm1F4v", &T::gatcha_group_id,
		"7Ffmi96v", &T::id,
		"4N27mkt1", &T::name,
		"J3stQ7jd", &T::need_friend_point,
		"03UGMHxF", &T::need_gems,
		"4tswNoV9", glzhlp::strbool<&T::once_day_flag>,
		"yu18xScw", &T::priority,
		"qA7M9EjP", glzhlp::datetime<&T::start_date>,
		"2HY3jpgu", &T::start_hour,
		"S1oz60Hc", &T::type
    );
};

struct GachaMst {
    using TYPE = GachaMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<GachaMst>
{
    using T = GachaMst;
    static constexpr auto value = object("5Y4GJeo3", &T::data);
};

struct ResummonGachaMstData {
};
template <>
struct glz::meta<ResummonGachaMstData>
{
    using T = ResummonGachaMstData;
    static constexpr auto value = object
    );
};

struct ResummonGachaMst {
    using TYPE = ResummonGachaMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<ResummonGachaMst>
{
    using T = ResummonGachaMst;
    static constexpr auto value = object("da3qD39b", &T::data);
};

struct SummonTicketV2MstData {
};
template <>
struct glz::meta<SummonTicketV2MstData>
{
    using T = SummonTicketV2MstData;
    static constexpr auto value = object
    );
};

struct SummonTicketV2Mst {
    using TYPE = SummonTicketV2MstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<SummonTicketV2Mst>
{
    using T = SummonTicketV2Mst;
    static constexpr auto value = object("hE1d083b", &T::data);
};

