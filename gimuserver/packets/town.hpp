
/*
    This file was autogenerated by decompfrontier packet-generator.
    Generation date: 2025-04-10 17:17:19

    DO NOT MODIFY THIS FILE! MODIFY THE FILE ./data/mst/town.py INSIDE THE
    PACKET GENERATOR REPOSITORY AND RUN THE GENERATION AGAIN!
*/
#pragma once

#include <glaze_helpers.hpp> // c++ runtime helpers

struct TownFacilityLvMstData {
	uint32_t	id{};
	uint32_t	karma{};
	uint32_t	lv{};
	list	release_receipe{};
};
template <>
struct glz::meta<TownFacilityLvMstData>
{
    using T = TownFacilityLvMstData;
    static constexpr auto value = object(
		"y9ET7Aub", &T::id,
		"HTVh8a65", &T::karma,
		"D9wXQI2V", &T::lv,
		"rGoJ6Ty9", &T::release_receipe
    );
};

struct TownFacilityLvMst {
    using TYPE = TownFacilityLvMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<TownFacilityLvMst>
{
    using T = TownFacilityLvMst;
    static constexpr auto value = object("d0EkJ4TB", &T::data);
};

struct TownFacilityMstData {
	uint32_t	height{};
	uint32_t	id{};
	std::string	name{};
	uint32_t	need_mission_id{};
	uint32_t	pos_x{};
	uint32_t	pos_y{};
	uint32_t	width{};
};
template <>
struct glz::meta<TownFacilityMstData>
{
    using T = TownFacilityMstData;
    static constexpr auto value = object(
		"FCzW4g6P", &T::height,
		"y9ET7Aub", &T::id,
		"aAFI6S5w", &T::name,
		"HSRhkf70", &T::need_mission_id,
		"SnNtTh51", &T::pos_x,
		"M6C1aXfR", &T::pos_y,
		"dRhvW13q", &T::width
    );
};

struct TownFacilityMst {
    using TYPE = TownFacilityMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<TownFacilityMst>
{
    using T = TownFacilityMst;
    static constexpr auto value = object("Lh1I3dGo", &T::data);
};

struct TownLocationLvMstData {
	uint32_t	id{};
	uint32_t	karma{};
	uint32_t	lv{};
	list	release_receipe{};
};
template <>
struct glz::meta<TownLocationLvMstData>
{
    using T = TownLocationLvMstData;
    static constexpr auto value = object(
		"y9ET7Aub", &T::id,
		"HTVh8a65", &T::karma,
		"D9wXQI2V", &T::lv,
		"rGoJ6Ty9", &T::release_receipe
    );
};

struct TownLocationLvMst {
    using TYPE = TownLocationLvMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<TownLocationLvMst>
{
    using T = TownLocationLvMst;
    static constexpr auto value = object("d0EkJ4TB", &T::data);
};

struct TownLocationMstData {
	uint32_t	height{};
	uint32_t	id{};
	std::string	name{};
	uint32_t	need_mission_id{};
	uint32_t	pos_x{};
	uint32_t	pos_y{};
	uint32_t	width{};
};
template <>
struct glz::meta<TownLocationMstData>
{
    using T = TownLocationMstData;
    static constexpr auto value = object(
		"FCzW4g6P", &T::height,
		"y9ET7Aub", &T::id,
		"aAFI6S5w", &T::name,
		"HSRhkf70", &T::need_mission_id,
		"SnNtTh51", &T::pos_x,
		"M6C1aXfR", &T::pos_y,
		"dRhvW13q", &T::width
    );
};

struct TownLocationMst {
    using TYPE = TownLocationMstData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<TownLocationMst>
{
    using T = TownLocationMst;
    static constexpr auto value = object("Lh1I3dGo", &T::data);
};

