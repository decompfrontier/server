
/*
    This file was autogenerated by decompfrontier packet-generator.
    Generation date: 2025-04-10 17:17:19

    DO NOT MODIFY THIS FILE! MODIFY THE FILE ./data/mst/dungeonkey.py INSIDE THE
    PACKET GENERATOR REPOSITORY AND RUN THE GENERATION AGAIN!
*/
#pragma once

#include <glaze_helpers.hpp> // c++ runtime helpers

struct DungeonKeyMSTData {
	std::string	close_img{};
	std::optional<uint32_t>	distribute_count{};
	uint32_t	distribute_flag{};
	uint32_t	dungeon_id{};
	uint32_t	id{};
	uint32_t	limit_sec{};
	std::string	name{};
	std::string	open_img{};
	std::string	possession_limit{};
	uint32_t	state{};
	std::string	thumbnail_img{};
	std::string	usage_pattern{};
};
template <>
struct glz::meta<DungeonKeyMSTData>
{
    using T = DungeonKeyMSTData;
    static constexpr auto value = object(
		"9unNZ6b0", &T::close_img,
		"khsb74Nq", &T::distribute_count,
		"EK5I6MQ9", &T::distribute_flag,
		"MHx05sXt", &T::dungeon_id,
		"16KMNJLb", &T::id,
		"i9sBW8uD", &T::limit_sec,
		"BM29ZgnK", &T::name,
		"VX0j1fni", &T::open_img,
		"N7I9vYZb", &T::possession_limit,
		"j0Uszek2", &T::state,
		"M2cv6dum", &T::thumbnail_img,
		"CR6aKWg8", &T::usage_pattern
    );
};

struct DungeonKeyMST {
    using TYPE = DungeonKeyMSTData;
    std::deque<TYPE> data;
};
template <>
struct glz::meta<DungeonKeyMST>
{
    using T = DungeonKeyMST;
    static constexpr auto value = object("4NG79sX1", &T::data);
};

